---
import '../styles/global.css'
import Nav from '../components/Nav.astro'
import SocialLink from '../components/SocialLink.astro'
---

<html lang="en">
<head>
    <meta charset="utf-8" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="viewport" content="width=device-width" />
    <meta name="generator" content={Astro.generator} />
    <title>Astro Form</title>
</head>
<body class="bg-primary p-4 text-lightCream text-lg">
<div class="container max-w-lg mt-[10%] mx-auto">
    <Nav />
    <form action="https://formbold.com/s/92WqW" method="POST" class="flex flex-col gap-8 mt-3.5" id="contactForm">
        <div>
            <input type="text" placeholder="Name" name="name" id="name" class="p-2 w-full" required aria-required="true" />
            <p id="name-error" class="text-red-800 text-sm font-bold hidden">Name is required</p>
        </div>

        <div>
            <input type="email" placeholder="Email" name="email" id="email" class="p-2 w-full" required aria-required="true" />
            <p id="email-error" class="text-red-800 text-sm font-bold hidden">Enter a valid email address</p>
        </div>

        <div>
            <input type="text" placeholder="Phone number (e.g., +254712345678)" name="phone" id="phone" class="p-2 w-full" required aria-required="true" />
            <p id="phone-error" class="text-red-800 text-sm font-bold hidden">Enter a valid phone number (international format supported)</p>
        </div>

        <button type="submit" class="border-2 border-lightCream rounded-lg p-2" id="submit-button">Submit</button>
        <SocialLink />
    </form>
</div>
</body>

<script is:inline>
    const form = document.getElementById('contactForm');
    const submitButton = document.getElementById('submit-button');

    const fields = [
        {
            id: 'name',
            errorId: 'name-error',
            validate: (val) => val.trim() !== ''
        },
        {
            id: 'email',
            errorId: 'email-error',
            validate: (val) => /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,}$/.test(val)
        },
        {
            id: 'phone',
            errorId: 'phone-error',
            validate: (val) => /^(?:\+?\d{1,3}[-\s]?)?(?:\d{7,15})$/.test(val.replace(/\s+/g, ''))
        }
    ];

    function validateField(field) {
        const input = document.getElementById(field.id);
        const error = document.getElementById(field.errorId);
        const value = input.value.trim();

        if (field.validate(value)) {
            error.classList.add('hidden');
            return true;
        } else {
            error.classList.remove('hidden');
            return false;
        }
    }

    // Live validation (good UX)
    fields.forEach(field => {
        const input = document.getElementById(field.id);
        input.addEventListener('input', () => validateField(field));
    });

    form.addEventListener('submit', (e) => {
        e.preventDefault();

        let allValid = true;

        fields.forEach(field => {
            const valid = validateField(field);
            if (!valid) allValid = false;
        });

        if (allValid) {
            submitButton.innerText = 'Processing...';

            setTimeout(() => {
                submitButton.innerText = 'Submit';
                form.submit();
            }, 1500);
        }
    });
</script>

<style>
input {
    outline: none;
    border-bottom: 4px solid #F3FCF0;
}
</style>
</html>
